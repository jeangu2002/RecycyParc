<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * MenageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MenageRepository extends \Doctrine\ORM\EntityRepository
{
public function add($menage) {
$this->getEntityManager()->persist($menage);
$this->getEntityManager()->flush();
}
public function getAll()
{
return $this->getEntityManager()
->createQuery(
'SELECT p FROM AppBundle:Menage p')
->getResult();
}

public function findById($menageId)
{

}

public function delete($id)
{
$em = $this->getEntityManager();
$entity = $em->find('AppBundle:Menage', $id);
if($entity)
{
$em->remove($entity);
$em->flush();
return 0;
}else{
return -1;
}

}
public function getQuotaJournalier($id)
{
$query = "select sum(quantite) from contenu_depot cd
join depot d on cd.id_depot = d.id
WHERE d.id_menage = :id and YEAR(date) = YEAR(CURDATE()) and DAYOFMONTH(date) = DAYOFMONTH(CURDATE()) and MONTH(date) = MONTH(CURDATE());";
 $em = $this->getEntityManager();
    $stmt = $em->getConnection()->prepare($query);
    $params['id'] = $id;
    $stmt->execute($params);
    $result = $stmt->fetchAll();
    return $result[0];
}
public function getQuotas($id)
{
$query = "SELECT d.nom,d.valumeDeBase, SUM(cd.quantite) as 'volumeDepose' from contenu_depot cd
            JOIN dechet d on cd.id_dechet = d.id
            JOIN depot dp ON dp.id = cd.id_depot
            JOIN menage mn On mn.id = dp.id_menage
            WHERE mn.id = :id
             GROUP BY d.nom,d.valumeDeBase
              ORDER BY d.nom ASC";
$rsm = new ResultSetMapping();
$statement = $this->getEntityManager()->getConnection()->prepare($query);
$statement->bindValue('id', $id);
$statement->execute();
return $statement->fetchAll();


}

public function getAllWithRelatedEntities()
{
$query = $this->getEntityManager()
->createQuery(
'SELECT m, d, c, dc FROM AppBundle:Menage m
        JOIN m.depots d
        JOIN d.contenu c 
        JOIN c.dechet dc');
try{
return $query->getResult();
} catch (Exception $ex) {
return null;
}
}

public function update($menage)
{
$this->getEntityManager()->persist($menage);
$this->getEntityManager()->flush();

}
}
