<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * ParcRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ParcRepository extends \Doctrine\ORM\EntityRepository {

    public function add($parc) {
        $this->getEntityManager()->persist($parc);
        $this->getEntityManager()->flush();
    }

    public function getAll() {
        return $this->getEntityManager()
                        ->createQuery(
                                'SELECT p FROM AppBundle:Parc p')
                        ->getResult();
    }
    
     private function executeQuery($sql)
    {
        $em = $this->getEntityManager();
        $stmt = $em->getConnection()->prepare($sql);
        $stmt->execute();
        return $stmt->fetchAll();
    }

    public function getStatsJournalier() {
        $sql = "SELECT WEEKDAY(date) as jour,count(id) as quantite FROM depot
                   WHERE YEAR(date) = YEAR(CURDATE())
                   GROUP BY WEEKDAY(date)";
        $em = $this->getEntityManager();
        $stmt = $em->getConnection()->prepare($sql);
        $stmt->execute();
        return $stmt->fetchAll();
    }

    public function getStatsMensuel() {
        $sql = "SELECT MONTH(date) as mois,count(id) as quantite FROM depot
            WHERE YEAR(date) = YEAR(CURDATE())
            GROUP BY MONTH(date)";
        $em = $this->getEntityManager();
        $stmt = $em->getConnection()->prepare($sql);
        $stmt->execute();
        return $stmt->fetchAll();
    }
    
    public function getStatsVolumeMensuelFiltre($id)
    {
        $sql = "select MONTH(dp.date) as mois,COUNT(c.quantite) as quantite FROM depot dp
                JOIN contenu_depot c ON c.id_depot = dp.id
                JOIN dechet dc ON c.id_dechet = dc.id
                WHERE YEAR(date) = YEAR(CURDATE()) AND c.id_dechet = :id
                GROUP BY MONTH(dp.date)";
        $em = $this->getEntityManager();
        $stmt = $em->getConnection()->prepare($sql);
        $stmt->bindValue('id', $id);
        $stmt->execute();
        return $stmt->fetchAll();
    }

    public function getStatsVolumeMensuel() {
        $sql = "select MONTH(dp.date) as mois,COUNT(c.quantite) as quantite FROM depot dp
                JOIN contenu_depot c ON c.id_depot = dp.id
                WHERE YEAR(date) = YEAR(CURDATE())
                GROUP BY MONTH(dp.date)";
        $em = $this->getEntityManager();
        $stmt = $em->getConnection()->prepare($sql);
        $stmt->execute();
        return $stmt->fetchAll();
    }
    
    public function getStatsVolumeJournalier()
    {
        $sql="select WEEKDAY(dp.date) as jour,COUNT(c.quantite) as quantite FROM depot dp
             JOIN contenu_depot c ON c.id_depot = dp.id
             WHERE YEAR(date) = YEAR(CURDATE())
             GROUP BY WEEKDAY(dp.date)";
        $em = $this->getEntityManager();
        $stmt = $em->getConnection()->prepare($sql);
        $stmt->execute();
        return $stmt->fetchAll();
        
    }
    
    public function getStatsVolumeJournalierFiltre($id)
    {
        $sql="select WEEKDAY(dp.date) as jour,COUNT(c.quantite) as quantite FROM depot dp
             JOIN contenu_depot c ON c.id_depot = dp.id 
             JOIN dechet dc ON c.id_dechet = dc.id
             WHERE YEAR(date) = YEAR(CURDATE()) AND c.id_dechet = :id
             GROUP BY WEEKDAY(dp.date)";
        $em = $this->getEntityManager();
        $stmt = $em->getConnection()->prepare($sql);
        $stmt->bindValue('id', $id);
        $stmt->execute();
        $result = $stmt->fetchAll();
        return $result;
    }
    
    public function findAllWithRelatedEntities()
    {
        $query = $this->getEntityManager()
        ->createQuery(
        'SELECT p, c, d FROM AppBundle:Parc p
        JOIN p.conteneurs c 
        JOIN c.dechets d');
        try{
            return $query->getResult();
        } catch (Exception $ex) {
            return null;
        }
         
    }
    
   

}
